
@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        overflow-y: scroll;
    }
</style>


@model VisionPos.Models.ViewModels.SalesInvoiceSalesItemsViewModel


@{
    var action = "";
    if (Model.SaleInvoice.Id == 0 || Model.SaleInvoiceItems.Id == 0)
    {
        action = "Create";
    }
    else
    {
        action = "Edit";
    }

}
@if (TempData["DangerMessage"] != null)
{
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <img src="..." class="rounded me-2" alt="...">
            <strong class="me-auto">Bootstrap</strong>
            <small class="text-muted">11 mins ago</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Hello, world! This is a toast message.
        </div>
    </div>
}
<form method="post" asp-action="@action">
    <div style="padding: 40px 0px 0px 40px ">
        <div class="whitebackgroundBorder" style="width:950px;">
            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
            @if (action == "Edit")
            {
                <h4 class="text-info">Edit</h4>
                <div class="row">
                    <div class="col-2 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.Id"></label>
                        <input asp-for="@Model.SaleInvoice.Id" readonly class="form-control" value="@Model.SaleInvoice.Id" />
                        @*<span asp-validation-for="@Model.Id" class="text-danger"></span>*@
                    </div>
                    <div class="col-6 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.InvoiceDate"></label>
                        <input asp-for="@Model.SaleInvoice.InvoiceDate" id="InvoiceDateId" class="form-control" value="@Model.SaleInvoice.InvoiceDate" />
                        <span asp-validation-for="@Model.SaleInvoice.InvoiceDate" class="text-danger"></span>
                    </div>
                    <div class="col-4 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.CustomerId"></label>

                        <select id="ddlCustomerTypeList" asp-for="@Model.SaleInvoice.CustomerId" asp-items="@Model.CustomerList" class="form-select"></select>
                        <span asp-validation-for="@Model.SaleInvoice.CustomerId" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-8 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.Description"></label>
                        <input asp-for="@Model.SaleInvoice.Description" class="form-control" value="@Model.SaleInvoice.Description" />
                        @*<span asp-validation-for="@Model.SaleInvoice.Description" class="text-danger"></span>*@
                    </div>
                    <div class="col-4 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.LineTotal"></label>
                        <input asp-for="@Model.SaleInvoice.LineTotal" class="form-control" value="@Model.SaleInvoice.LineTotal" />
                        <span asp-validation-for="@Model.SaleInvoice.LineTotal" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-8 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.Discount"></label>
                        <input asp-for="@Model.SaleInvoice.Discount" class="form-control" value="@Model.SaleInvoice.Discount" />
                        <span asp-validation-for="@Model.SaleInvoice.Discount" class="text-danger"></span>
                    </div>
                    <div class="col-4 form-group-row">
                        <label class="col-form-label" asp-for="@Model.SaleInvoice.InvoiceTotal"></label>
                        <input asp-for="@Model.SaleInvoice.InvoiceTotal" class="form-control" value="@Model.SaleInvoice.InvoiceTotal" />
                        <span asp-validation-for="@Model.SaleInvoice.InvoiceTotal" class="text-danger"></span>
                    </div>
                </div>
                @*<div class="col-2 row" style="padding:0px 0px 0px 13px">
                        <div class="col-1 form-group-row text-end" style="padding:10px 1px;">
                            <input type="checkbox" asp-for="@Model.Customer.IsActive" style="margin:0px 23px 0px 0px" />
                            <span asp-validation-for="@Model.Customer.IsActive" class="text-danger"></span>
                        </div>
                        <div class="col-1 form-group-row text-start">
                            <label class="col-form-label" style="padding: 8px 0px 0px 0px" asp-for="@Model.Customer.IsActive"></label>
                        </div>
                    </div>*@
                <partial name="_EditAndBackToListPartialView" />
            }
            else
            {
                <h4 class="text-info">Create</h4>
                <div class="row d-flex justify-content-between">
                    <div class="col-lg-8 form-group-row">
                        <div class="row">
                            <div class="col-2 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.Id"></label>
                                <input asp-for="@Model.SaleInvoice.Id" readonly class="form-control" />
                                @*<span asp-validation-for="@Model.Id" class="text-danger"></span>*@
                            </div>
                            <div class="col-3 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.InvoiceDate"></label>
                                <input type="datetime" asp-for="@Model.SaleInvoice.InvoiceDate" id="CInvoiceDateId" readonly class="form-control" value="@System.DateTime.Now.ToString("dd-MMM-yyyy")" />
                                <span asp-validation-for="@Model.SaleInvoice.InvoiceDate" class="text-danger"></span>
                            </div>
                            <div class="col-4 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.CustomerId"></label>
                                <select id="ddlCustomerList" asp-for="@Model.SaleInvoice.CustomerId" asp-items="@Model.CustomerList" class="form-select"></select>
                                <span asp-validation-for="@Model.SaleInvoice.CustomerId" class="text-danger"></span>
                            </div>
                            <div class="col-9 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.Description"></label>
                                <input asp-for="@Model.SaleInvoice.Description" class="form-control" />
                                <span asp-validation-for="@Model.SaleInvoice.Description" class="text-danger"></span>
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-4 form-group-row">
                        <div class="row">
                            <div class="col-5 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.LineTotal"></label>
                                <input asp-for="@Model.SaleInvoice.LineTotal" readonly class="form-control" />
                                <span asp-validation-for="@Model.SaleInvoice.LineTotal" class="text-danger"></span>
                            </div>
                            <div class="col-5 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.Discount"></label>
                                <input asp-for="@Model.SaleInvoice.Discount" class="form-control" value="0" />
                                <span asp-validation-for="@Model.SaleInvoice.Discount" class="text-danger"></span>
                            </div>
                            <div class="col-10 form-group-row">
                                <label class="col-form-label" asp-for="@Model.SaleInvoice.InvoiceTotal"></label>
                                <input asp-for="@Model.SaleInvoice.InvoiceTotal" readonly class="form-control" />
                                <span asp-validation-for="@Model.SaleInvoice.InvoiceTotal" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
                </div>
                @*<div class="col-2 row" style="padding:0px 0px 0px 13px">
                        <div class="col-1 form-group-row text-end" style="padding:10px 1px;">
                            <input type="checkbox" asp-for="@Model.Customer.IsActive" style="margin:0px 23px 0px 0px" />
                            <span asp-validation-for="@Model.Customer.IsActive" class="text-danger"></span>
                        </div>
                        <div class="col-1 form-group-row text-start">
                            <label class="col-form-label" style="padding: 8px 0px 0px 0px" asp-for="@Model.Customer.IsActive"></label>
                        </div>
                    </div>*@

                <div class="row">
                    <div class="col-8 form-group-row" style="margin:0px 0px 0px -98px">
                        <partial name="_CreateAndBackToListPartialView" />
                    </div>
                    <div class="col-4 form-group-row" style="padding:23px 0px 0px 298px">
                        <button type="button" class="btn btn-success" id="Btn_AddInvoiceItem"><i class="fa-solid fa-plus"></i></button>
                    </div>
                </div>
                <br />

                <div class="row border" style="background-color:lightslategrey;color:white;margin:0px 50px 0px 0px">
                    <label class=" col-lg-3 col-form-label form-group-row" style="margin:0px -2px 0px 0px" asp-for="@Model.SaleInvoiceItems.ItemId"></label>
                    <label class=" col-lg-2 col-form-label form-group-row" style="margin:0px -2px 0px 0px" asp-for="@Model.SaleInvoiceItems.Quantity"></label>
                    <label class=" col-lg-2 col-form-label form-group-row" style="margin:0px -2px 0px 0px" asp-for="@Model.SaleInvoiceItems.Rate"></label>
                    <label class=" col-lg-2 col-form-label form-group-row" style="margin:0px -1px 0px 0px" asp-for="@Model.SaleInvoiceItems.Discount"></label>
                    <label class=" col-lg-2 col-form-label form-group-row">Total</label>
                </div>
                <div class="SaleInvoiceItem" style="margin:-5px -1px 1px -1px;padding:0px 5px 12px 2px">

                    <partial name="_SalesInvoiceItemPartialView" />
                </div>

            }

        </div>


    </div>
</form>



@section scripts
{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let errorMessageShown = false;
        var count = 2;
        $(document).on('click', '#Btn_AddInvoiceItem', function (e) {
            $.ajax({
                url: '/Invoices/Invoice/DisplayNewInvoiceItem',
                data: { id: count },
                success: function (partialView) {
                    $('.SaleInvoiceItem').append(partialView);
                    count = count + 1;
                }
            });
        });
        $(document).on('click', '#Btn_DeleteInvoiceItem', function (e) {
            $(this).parent().parent().remove();
        });


        //$(document).ready(function () {
        //    // Attach event handler to a higher-level static parent (e.g., the document)

        //});


        function getrate(count) {
            $(document).off('change', '.PItemsList_' + count);
            $(document).on('change', '.PItemsList_' + count, function (e) {
                var valueSelected = $(this).val();
                var $row = $(this).closest('.row_' + count);
                /*debugger*/
                var $rate = $row.find('.SIRate_' + count);

                $.ajax({
                    type: "GET",
                    url: '/Invoices/Invoice/DisplayRate',
                    contentType: "application/json; charset=utf-8",
                    data: { id: valueSelected },
                    cache: false,
                    dataType: "json",
                    success: function (result) {
                        if (result != null) {
                            $rate.val(result);
                            const inputValue = parseFloat($row.find('.SIQuantity_' + count).val().trim());
                            /*debugger*/
                            if (inputValue === undefined || inputValue === null || inputValue === '' || inputValue === 0)
                            {
                                /*toastr.error('Discount Should be low');*/
                                $row.find('#SaleItemTotal').val(''); 
                            }
                            else
                            {
                                var quantity = parseFloat($row.find('.SIQuantity_' + count).val());
                                var rate = parseFloat($row.find('.SIRate_' + count).val());
                                var total = quantity * rate;
                                if (!isNaN(total)) {
                                    var Discount = parseFloat($row.find('.SIDiscount_' + count).val());
                                    if (total <= Discount) {
                                        toastr.error('Discount Should be low');
                                        $row.find('.SIDiscount_' + count).val('');
                                        total = quantity * rate;
                                        $row.find('#SaleItemTotal').val(total.toFixed(2));
                                    }
                                    else {
                                        var Total = total - Discount;
                                        if (!isNaN(Total)) {
                                            $row.find('#SaleItemTotal').val(Total.toFixed(2)); // Set the total value in the respective cell
                                        } else {
                                            $row.find('#SaleItemTotal').val(''); // Clear the total value if any invalid input
                                        }
                                    }
                                }
                                else {
                                    $row.find('#SaleItemTotal').val(''); // Clear the total value if any invalid input
                                }
                            }
                        }
                        else {

                            alert("Plz Select option first");
                            $('.SIRate_' + count).val(null);
                        }

                    }
                });
            });
        }

        // Function to calculate total for a specific row
        function calculateTotalForRow(count) {
            $(document).off('change', '.SIQuantity_' + count);
            $(document).on('change', '.SIQuantity_' + count, function (e) {
                /*debugger*/
                /*errorMessageShown = false;*/
                var $row = $(this).closest('.row_' + count);
                const inputValue = parseFloat($row.find('.SIQuantity_' + count).val().trim());
                var valueSelected = $row.find('.PItemsList_' + count).val().trim();
                /*debugger*/
                if (valueSelected === undefined || valueSelected === null || valueSelected === '' || valueSelected === '0') {
                    toastr.error('First Select Any Item');   
                }
                else
                {
                    if (inputValue === undefined || inputValue === null || inputValue === '' || inputValue === 0)
                    {
                        toastr.error('Enter Any Quantity');
                        $row.find('#SaleItemTotal').val('');
                    }
                    else
                    {
                        var quantity = parseFloat($row.find('.SIQuantity_' + count).val());
                        var rate = parseFloat($row.find('.SIRate_' + count).val());
                        var total = quantity * rate;
                        if (!isNaN(total)) {
                            var Discount = parseFloat($row.find('.SIDiscount_' + count).val());
                            if (total <= Discount) {
                                toastr.error('Discount Should be low');
                                $row.find('.SIDiscount_' + count).val('');
                                total = quantity * rate;
                                $row.find('#SaleItemTotal').val(total.toFixed(2));
                            }
                            else
                            {
                                var Total = total - Discount;
                                if (!isNaN(Total)) {
                                    $row.find('#SaleItemTotal').val(Total.toFixed(2)); // Set the total value in the respective cell
                                } else {
                                    $row.find('#SaleItemTotal').val(''); // Clear the total value if any invalid input
                                }
                            }
                        }
                        else
                        {
                            $row.find('#SaleItemTotal').val(''); // Clear the total value if any invalid input
                        }
                    }
                }
            });
        }

        function calculateTotalAfterDiscount(count) {
            $(document).off('change', '.SIDiscount_' + count);
            $(document).on('change', '.SIDiscount_' + count, function (e) {
                /*debugger*/
                var $row = $(this).closest('.row_' + count);
                var valueSelected = $row.find('.PItemsList_' + count).val().trim();
                var quantity = parseFloat($row.find('.SIQuantity_' + count).val());
                /*debugger*/
                if (valueSelected === undefined || valueSelected === null || valueSelected === '' || valueSelected === '0') {
                    toastr.error('First Choose the Item From the List');
                }
                else {
                    if (quantity === undefined || quantity === null || quantity === '' || quantity === 0 || quantity === 0.00) {
                        toastr.error('First Enter the Quantity');
                    }
                    else
                    {
                        /*debugger*/
                        var Discount = parseFloat($row.find('.SIDiscount_' + count).val());
                        var rate = parseFloat($row.find('.SIRate_' + count).val());
                        var total = quantity * rate;
                        if (total <= Discount) {
                            toastr.error('Discount Should be low');
                            $row.find('.SIDiscount_' + count).val('');
                            total = quantity * rate;
                            $row.find('#SaleItemTotal').val(total.toFixed(2));
                        }
                        else
                        {
                            if (!isNaN(Discount))
                            {
                                var Total = total - Discount;
                                if (!isNaN(Total)) {
                                    $row.find('#SaleItemTotal').val(Total.toFixed(2)); // Set the total value in the respective cell
                                } else {
                                    $row.find('#SaleItemTotal').val(''); // Clear the total value if any invalid input
                                }
                            }
                            else
                            {
                                $row.find('#SaleItemTotal').val(total.toFixed(2));
                            }
                            
                        }
                    }
                }
            });
        }


    </script>


}
